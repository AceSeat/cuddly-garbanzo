

function __msg_error() {
    [[ "${ERROR}" == "1" ]] && echo -e "[ERROR]: $*"
}
function __msg_debug() {
    [[ "${DEBUG}" == "1" ]] && echo -e "[DEBUG]: $*"
}
function __msg_info() {
    [[ "${INFO}" == "1" ]] && echo -e "[INFO]: $*"
}
function check_mandatory_vars() {
    if [[ -z ${AWS_CODECOMMIT_REPOSITORY_URL} ]] ||  \
              [[ -z ${GIT_HTTPS_USERNAME_DEV} ]] ||  \
              [[ -z ${GIT_HTTPS_PASSWORD_DEV} ]] ||  \
              [[ -z ${GIT_HTTPS_USERNAME_MAIN} ]] || \
              [[ -z ${GIT_HTTPS_PASSWORD_MAIN} ]]; then
      _msg_error "Mandatory var(s) not present"
      exit ${FAILURE_CODE}
    else
     __msg_info "All Mandatory vars present"
    fi
}
function check_branch() {
    if [[ "${CI_COMMIT_REF_NAME}" == "dev" ]]; then
      GIT_HTTPS_USERNAME="${GIT_HTTPS_USERNAME_DEV}"
      GIT_HTTPS_PASSWORD="${GIT_HTTPS_PASSWORD_DEV}"
    elif [[ "${CI_COMMIT_REF_NAME}" == "main" ]]; then
      GIT_HTTPS_USERNAME="${GIT_HTTPS_USERNAME_MAIN}"
      GIT_HTTPS_PASSWORD="${GIT_HTTPS_PASSWORD_MAIN}"
    else
      __msg_error "Commit received on a branch different than dev/main.. Aborting"
      exit "${FAILURE_CODE}"
    fi
}
apk add --no-cache git
check_mandatory_vars
__msg_info "Checking if the push needs to happen on allowed branches"
check_branch
__msg_info "Pushing latest commit hash ${CI_COMMIT_SHA} to ${AWS_CODECOMMIT_REPOSITORY_URL}"
__msg_info "Creating local branch ${CI_COMMIT_REF_NAME}-${CI_JOB_ID}"
git checkout -b "${CI_COMMIT_REF_NAME}-${CI_JOB_ID}"
if git push "https://${GIT_HTTPS_USERNAME}:${GIT_HTTPS_PASSWORD}@${AWS_CODECOMMIT_REPOSITORY_URL}" "${CI_COMMIT_REF_NAME}-${CI_JOB_ID}":"${CI_COMMIT_REF_NAME}" --force; then
    __msg_info "Successfully pushed the commits to AWS Codecommit remote"
else
    __msg_error "Unable to push commits to AWS CodeCommit remote.. Failing"
    exit ${FAILURE_CODE}
fi
